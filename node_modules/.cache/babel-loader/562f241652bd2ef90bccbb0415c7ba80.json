{"ast":null,"code":"var _jsxFileName = \"/Users/fadytito/Frontend Development/React Nanodegree/WouldYouRather/src/components/Dashboard.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport QuestionsList from \"./QuestionsList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Dashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      answeredTab: false\n    };\n\n    this.toggleView = () => {\n      this.setState(prevState => ({\n        answeredTab: !prevState.answeredTab\n      }));\n    };\n  }\n\n  render() {\n    const {\n      answeredTab\n    } = this.state;\n    const {\n      answeredQuestionsIds,\n      unAnsweredQuestionsIds\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns-wrp\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.toggleView,\n          disabled: !answeredTab,\n          children: \"unanswered questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.toggleView,\n          disabled: answeredTab,\n          children: \"answered questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), answeredTab ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(QuestionsList, {\n          qids: answeredQuestionsIds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(QuestionsList, {\n          qids: unAnsweredQuestionsIds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nfunction mapStateToProps({\n  questions,\n  authedUser,\n  users\n}) {\n  const questionsIds = Object.keys(questions).sort((a, b) => questions[b].timestamp - questions[a].timestamp);\n  const answeredQuestionsIds = [];\n  const unAnsweredQuestionsIds = [];\n  questionsIds.forEach(questionId => {\n    if (users[authedUser].answers[questionId]) {\n      answeredQuestionsIds.push(questionId);\n    } else {\n      unAnsweredQuestionsIds.push(questionId);\n    }\n  });\n  return {\n    answeredQuestionsIds,\n    unAnsweredQuestionsIds\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/fadytito/Frontend Development/React Nanodegree/WouldYouRather/src/components/Dashboard.js"],"names":["React","Component","connect","QuestionsList","Dashboard","state","answeredTab","toggleView","setState","prevState","render","answeredQuestionsIds","unAnsweredQuestionsIds","props","mapStateToProps","questions","authedUser","users","questionsIds","Object","keys","sort","a","b","timestamp","forEach","questionId","answers","push"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCI,KADgC,GACxB;AACNC,MAAAA,WAAW,EAAE;AADP,KADwB;;AAAA,SAKhCC,UALgC,GAKnB,MAAM;AACjB,WAAKC,QAAL,CAAeC,SAAD,KAAgB;AAC5BH,QAAAA,WAAW,EAAE,CAACG,SAAS,CAACH;AADI,OAAhB,CAAd;AAGD,KAT+B;AAAA;;AAUhCI,EAAAA,MAAM,GAAG;AACP,UAAM;AAACJ,MAAAA;AAAD,QAAgB,KAAKD,KAA3B;AACA,UAAM;AAAEM,MAAAA,oBAAF;AAAwBC,MAAAA;AAAxB,QAAmD,KAAKC,KAA9D;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,KAAKN,UAAtB;AAAkC,UAAA,QAAQ,EAAE,CAACD,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,OAAO,EAAE,KAAKC,UAAtB;AAAkC,UAAA,QAAQ,EAAED,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAUGA,WAAW,gBACV;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,IAAI,EAAEK;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADU,gBAKV;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,IAAI,EAAEC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD;;AAnC+B;;AAsClC,SAASE,eAAT,CAAyB;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,UAAb;AAAyBC,EAAAA;AAAzB,CAAzB,EAA2D;AACzD,QAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYL,SAAZ,EAAuBM,IAAvB,CACnB,CAACC,CAAD,EAAIC,CAAJ,KAAUR,SAAS,CAACQ,CAAD,CAAT,CAAaC,SAAb,GAAyBT,SAAS,CAACO,CAAD,CAAT,CAAaE,SAD7B,CAArB;AAIA,QAAMb,oBAAoB,GAAG,EAA7B;AACA,QAAMC,sBAAsB,GAAG,EAA/B;AAEAM,EAAAA,YAAY,CAACO,OAAb,CAAsBC,UAAD,IAAgB;AACnC,QAAIT,KAAK,CAACD,UAAD,CAAL,CAAkBW,OAAlB,CAA0BD,UAA1B,CAAJ,EAA2C;AACzCf,MAAAA,oBAAoB,CAACiB,IAArB,CAA0BF,UAA1B;AACD,KAFD,MAEO;AACLd,MAAAA,sBAAsB,CAACgB,IAAvB,CAA4BF,UAA5B;AACD;AACF,GAND;AAQA,SAAO;AACLf,IAAAA,oBADK;AAELC,IAAAA;AAFK,GAAP;AAID;;AAED,eAAeV,OAAO,CAACY,eAAD,CAAP,CAAyBV,SAAzB,CAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport QuestionsList from \"./QuestionsList\";\n\nclass Dashboard extends Component {\n  state = {\n    answeredTab: false,\n  };\n\n  toggleView = () => {\n    this.setState((prevState) => ({\n      answeredTab: !prevState.answeredTab,\n    }));\n  };\n  render() {\n    const {answeredTab} = this.state;\n    const { answeredQuestionsIds, unAnsweredQuestionsIds } = this.props;\n    return (\n      <div className=\"dashboard\">\n        <div className=\"btns-wrp\">\n          <button onClick={this.toggleView} disabled={!answeredTab}>\n            unanswered questions\n          </button>\n          <button onClick={this.toggleView} disabled={answeredTab}>\n            answered questions\n          </button>\n        </div>\n\n        {answeredTab ? (\n          <div>\n            <QuestionsList qids={answeredQuestionsIds} />\n          </div>\n        ) : (\n          <div>\n            <QuestionsList qids={unAnsweredQuestionsIds} />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps({ questions, authedUser, users }) {\n  const questionsIds = Object.keys(questions).sort(\n    (a, b) => questions[b].timestamp - questions[a].timestamp\n  );\n\n  const answeredQuestionsIds = [];\n  const unAnsweredQuestionsIds = [];\n\n  questionsIds.forEach((questionId) => {\n    if (users[authedUser].answers[questionId]) {\n      answeredQuestionsIds.push(questionId);\n    } else {\n      unAnsweredQuestionsIds.push(questionId);\n    }\n  });\n\n  return {\n    answeredQuestionsIds,\n    unAnsweredQuestionsIds,\n  };\n}\n\nexport default connect(mapStateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}